<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>Amazon Interview | Set 103 (On-Campus)</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="amazon-interview-set-103-on-campus" class="section level1">
<h1>Amazon Interview | Set 103 (On-Campus)</h1>
<p>First of all, I would like to convey my special thanks to geeksforgeeks for such a special guidance. Here is my interview experience: <span id="more-130555"></span></p>
<p><strong>First day:</strong><br /> <em><strong>Round-1 :</strong></em><br /> 20 MCQs(Data structure, C, C++, OS, Probability ).<br /> 2 programs :<br /> 1. Given an array of integers. Segregate all the non-zero numbers at the beginning. Print the number of non-zero integers and the minimum number of swaps required for these operations.</p>
<pre><code>Eg.  : I/p : 1, 0, 0, -6, 2, 0
         o/p : Number of non-zero integers : 3
                   Minimum number of swaps : 2 </code></pre>
<p>2. Given a text txt[0..n-1] and a pattern pat[0..m-1], write a function search(char pat[], char txt[]) that prints all occurrences of pat[] and its permutations (or anagrams) in txt[]. You may assume that n &gt; m.</p>
<pre><code>E.g. : I/p : txt[] = âBACDGABCDAâ    pat[] = âABCDâ
          o/p : Found at index 0
                    Found at index 5
                    Found at index 6 </code></pre>
<p><strong>Second day:</strong><br /> <em><strong>Round 2 : PI</strong></em><br /> 1. Discussion on Project.<br /> 2. Code : Given an array of integers. Find the minimum distance between two numbers.<br /> I did it in O(N) time complexity.<br /> Then he changed the question and asked what if the array is sorted and contains duplicates.<br /> I did it in O(logN) time complexity.<br /> 3. Given a linked list. Segregate all the positive numbers at the beginning and all the negative numbers at the end.<br /> I did it in O(N) time complexity.</p>
<p><em><strong>Round 3 : PI</strong></em><br /> 1. Discussion on project.<br /> 2. Code : LCA of BST.<br /> 3. Code : LCA of Binary tree.<br /> 4. Discussion on heap and stack.<br /> 5. Code : Maximum subarray sum.<br /> 6. Os concepts : What is semaphore? Brief explanation on wait() and signal() operation.</p>
<p><em><strong>Round 4 : PI</strong></em><br /> 1. Discussion on oops concept. Asked me about copy constructor, virtual function, virtual class,<br /> Template, exceptional handling.<br /> 2. Discussion on Os concepts. Semaphore, different page replacement algos.<br /> 3. LRU implementation using stack ( I was not allowed to use any other data structure).<br /> I did it using two stacks.<br /> 4. It was a modification of this question.<br /> Our chef has recently opened a new restaurant with a unique style. The restaurant is divided into K compartments (numbered from 1 to K) and each compartment can be occupied by at most one customer. Each customer that visits the restaurant has a strongly preferred compartment p (1 ? p ? K), and if that compartment is already occupied, then the customer simply leaves. Now obviously, the chef wants to maximize the total number of customers that dine at his restaurant and so he allows (or disallows) certain customers so as to achieve this task. You are to help him with this. Given a list of N customers with their arrival time, departure time and the preferred compartment, you need to calculate the maximum number of customers that can dine at the restaurant.</p>
<p>Instead of restaurant and customers, I was given platforms and trains.</p>
<p>I was asked to design a data structure for that.</p>
<p><strong>Third day :</strong><br /> <em><strong>Round 5 :</strong></em><br /> 1. Discussion on project.<br /> 2. Discussion on different types of sorting techniques.<br /> Difference between merge sort and quick sort. When and where are they used.<br /> Discussion on counting sort.<br /> 3. Discussion on hash-map.<br /> Design a data structure which will provide the same function as hash-map.<br /> 4. Code : Given an array : A1[] = 2, 1, 2, 5, 7, 1, 9, 3, 6, 8, 8<br /> A2[] = 2, 1, 8, 3<br /> Sort A1 in such a way that the relative order among the elements will be same as those are in A2. If the element is not present in A2, append them at last in sorted order.<br /> o/p : 2, 2, 1, 1, 8, 8, 3, 5, 6, 7, 9<br /> I did it O(NlogN) time complexity.</p>
<p><em><strong>Round 6 : (Bar-Raiser)</strong></em><br /> 1. Code : Convert little endian to big endian.<br /> 2. Code : Kth max in a file.<br /> I did it using min-heap, then he sked me to use other data structure. Then I did it using Balanced binary search tree.<br /> 3. Code : Find the second non-repeating character in a string.<br /> 4. Given prime number p&gt;=5 :<br /> Prove that : (p^2 â€“ 1) will be divisible by 24.<br /> 5. Given a decimal number N as a string of digits (only 0â€™s, 1â€™s and 2â€™s are there), how do I check if it’s divisible by 3 using regular expressions only, without converting to int? I was asked to design DFA for that.</p>
<p>I would like to thanks GeeksForGeeks which helped me to improve my knowledge and understanding of Data structures and Algorithms</p>
<p>If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p>
<p>   </p>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/amazon/">Amazon</a></p>
<div id="source-108" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/amazon-interview-set-103-campus/" class="uri">http://www.geeksforgeeks.org/amazon-interview-set-103-campus/</a></p>
<p></p>
</div>
</div>
</body>
</html>

