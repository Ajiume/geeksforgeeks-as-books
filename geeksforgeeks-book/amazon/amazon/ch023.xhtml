<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>Amazon Interview | Set 13</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="amazon-interview-set-13" class="section level1 post-title">
<h1>Amazon Interview | Set 13</h1>
<p><strong>Round 1 (Telephonic)</strong><br /> Q1. For a given number, find the next greatest number which is just greater than previous one and made up of same digits. <span id="more-28405"></span></p>
<p>Q2. Find immediate ancestor of a given Node</p>
<p>Q3. Clone the linked list having an extra random pointer in nodes which is pointing random node in the list.</p>
<p><br /> <strong>Round 2 (F2F)</strong><br /> Q1 In a binary tree, a random pointer is given in each node. If this pointer pointing other than any successor of the node then set it as NULL. Otherwise let it remain untouched. Write code.</p>
<p>Q2. You will be given the number of pairs of parenthesis. Find out the total possible valid unique combinations and there should not be any duplicity. Write code</p>
<p><br /> <strong>Round 3 (F2F)</strong><br /> Project and some questions related to it.<br /> Q1 Given an in-order traversal of a special binary tree having property that the node is always greater than its left and right child. Construct the tree and write code.</p>
<p>Q2 Find top 10 trending words inserted by users in sites like twitter. Only algorithm.</p>
<p>Q3 write an efficient code to find the first occurrence of 1 in a sorted binary array. (2 minutes only)</p>
<p><br /> <strong>Round 4 (Telephonic)</strong><br /> Q1. Remove duplicated from a string in O(n) without using hash.</p>
<p>Q2. Find the first occurrence of 1 in a sorted infinite binary tree.</p>
<p><br /> <strong>Round 5 (F2F)</strong><br /> Amazon has many visitors to its site. And it tracks what pages the customers visited, etc and other stuff.<br /> Make an efficient data structure for storing 3 days of information of all those customers who have visited site exactly two different days and searched more than 3 unique pages of the site in those 2 days.</p>
<p>So whoever visited site exactly two days out of these three days and visited more then 3 unique pages should be in the contact list.</p>
<p>After final round got a regret mail after 3 days that I was Not selected.</p>
<pre class="brush: cpp; title: ; notranslate" title=""><code></code></pre>
<p>This article is compiled by <strong>Ramendra</strong>. If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p>
<p>   </p>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/amazon/">Amazon</a>, <a href="http://www.geeksforgeeks.org/tag/interview-experience/">Interview Experience</a></p>
<div id="source-21" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/amazon-interview-set-13/" class="uri">http://www.geeksforgeeks.org/amazon-interview-set-13/</a></p>
<p></p>
</div>
</div>
</body>
</html>

