<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>Amazon Interview | Set 117 (On-Campus for Internship)</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="amazon-interview-set-117-on-campus-for-internship" class="section level1 post-title">
<h1>Amazon Interview | Set 117 (On-Campus for Internship)</h1>
<p>Recently Amazon India visited our campus for 2 months internship. There were four rounds.<span id="more-130773"></span></p>
<p><strong>2 online coding questions + 20 MCQ :</strong><br /> MCQs had 15 questions(not exactly) on OS (to my surprise) , one aptitude(probability) and rest on c/c++</p>
<p><strong>2nd Round ( Group Interview / Written round) :</strong><br /> 21 were selected for the second round. We had 2 questions.</p>
<p>1. Given two strings, find whether they are anagrams of each other. (too easy).<br /> Its here.. <a href="http://www.geeksforgeeks.org/check-whether-two-strings-are-anagram-of-each-other/" class="uri">http://www.geeksforgeeks.org/check-whether-two-strings-are-anagram-of-each-other/</a></p>
<p>2. Given a n-ary tree, Convert it into an array and return it. Construct the same n-ary tree from that array again. (DFS is better here as reconstruction is necessary) –</p>
<p>Push the root to a stack. “pop the stack.store the value of the root node and the number of children it has in the array.push all the children to a stack from right to left”.. do this until the stack becomes empty.. the array will have dfs along with the number of children of each node.</p>
<p>For reconstruction,pass “i” by reference( i is for iterating through the array) take the value at index 0 .. make it has root. increment i. for all the children of the root, recursively call the same function. return root. (I hope this works :P)</p>
<p><strong>3rd round (Face to Face):</strong><br /> Only 5 were selected.I was asked only one question and i didnt do well. Find the square root of a number. i answered that this can be done using Babylonian method. (<a href="http://www.geeksforgeeks.org/square-root-of-a-perfect-square/" class="uri">http://www.geeksforgeeks.org/square-root-of-a-perfect-square/</a>) or binary search method.. He asked me to implement Binary Search method. I did a mistake. then he asked me to correct it.. i corrected it. I wasn’t able to impress him much.</p>
<p>Remember the floating point arithmetic limitations.. this is where i failed.</p>
<p><strong>4th round (Face to Face):</strong><br /> I was called for 4th round. ( Only i had 4th round because of my bad performance in the 3rd round). The interviewer asked a lot of questions. They were easy</p>
<p>1.Given an array of 0s and 1s sorted. Find the first occurrence of 1 ( Binary Search)</p>
<p>2.Given an infinite array of 0s and 1s.(sorted) .Find the first occurence of 1(similar to this.. <a href="http://www.geeksforgeeks.org/find-the-point-where-a-function-becomes-negative/" class="uri">http://www.geeksforgeeks.org/find-the-point-where-a-function-becomes-negative/</a>)</p>
<p>3. Given a matrix sorted in ascending order both row and column wise. Search an element( <a href="http://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/" class="uri">http://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/</a> ). This is O(n+m). He asked me a better solution.. I tried and he helped me a lot..Though i wasn’t able to deliver.</p>
<p>4. Given a tree, print the max sum path from root to leaf .. (<a href="http://www.geeksforgeeks.org/find-the-maximum-sum-path-in-a-binary-tree/" class="uri">http://www.geeksforgeeks.org/find-the-maximum-sum-path-in-a-binary-tree/</a>)</p>
<p>5.Given a tree,print spirally the column order of a tree.</p>
<pre><code>ex :               1
              /         \
            2            3
          /   \        /    \
        4      5      6      7
o/p : 4 2 6 5 1 3 7 </code></pre>
<p>6. Implement a stack using array. Implement two stacks using an array. Implement 3 stacks.</p>
<p>7. You are given an array . You have to create a stack when the user wants to do so and delete a stack when the user says.You wont be given the number of stacks that will be created.</p>
<p>I thank geeksforgeeks for providing an excellent platform to learn new things. Check the interview corner for other company interviews.</p>
<p>If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p>
<p>   </p>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/amazon/">Amazon</a></p>
<div id="source-122" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/amazon-interview-set-117-campus-internship/" class="uri">http://www.geeksforgeeks.org/amazon-interview-set-117-campus-internship/</a></p>
<p></p>
</div>
</div>
</body>
</html>

