<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>Amazon Interview | Set 69 (For SDE-1)</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="amazon-interview-set-69-for-sde-1" class="section level1">
<h1>Amazon Interview | Set 69 (For SDE-1)</h1>
<p><strong>Online Coding Round:</strong><span id="more-127488"></span></p>
<ol>
<li>Find if a given string contains duplicates</li>
<li>Given a BST, find the maximum N elements of the tree</li>
<li>Given a BST, convert it into Doubly Linked List</li>
<li>Rotate a 2-D Matrix by 90 degrees</li>
</ol>
<p><strong>Telephonic Interview 1:</strong></p>
<ol>
<li>Sliding Window Problem: Given a larger integer buffer/array (say size, x), now given a window size (say, n) and a number (say, k). Windows starts from the 1<sup>st</sup> element and keeps shifting right by one element. The objective is to find the minimum k numbers present in each window.</li>
<li>Given a binary tree, each node having an integer data, the objective is to create a new Doubly Linked List using this binary such that each node in DLL has vertical sum of nodes in binary tree. The order of nodes in DLL shall be left to right as that of binary treeâ€™s vertical nodes i.e., leftmost vertical sum shall be 1<sup>st</sup> node in DLL and the rightmost vertical sum shall be the last node in DLL.</li>
</ol>
<p><strong>Telephonic Interview 2:</strong></p>
<ol>
<li>Given the root of the binary tree and a pointer to any random node in that tree, the objective is to print all the nodes at â€˜kâ€™ distance from the given random node.</li>
</ol>
<p><strong>Face to Face<strong>:</strong></strong></p>
<p><strong><em><span>Note</span></em>:</strong> Time and space complexity were discussed in each of the following questions. And for each question I was asked to optimize the algorithm and later write the working code for it.Also in each round the current project was discussed.</p>
<p><strong>Round 1:</strong></p>
<ol>
<li>Given a matrix (m*n), source (0, 0) &amp; destination (m-1, n-1) (i.e. last cell), Find out total number of ways to reach the destination from the source.</li>
<li>Given a binary tree, defining a term â€œcomplete path sumâ€? as, sum of values of nodes lying in a path from root to the leaf; Now given a value â€˜kâ€™, we have to find the k-heavy path and prune the binary tree i.e. prune/delete nodes for which complete path sum is smaller than k.</li>
</ol>
<p><strong>Round 2 (Managerâ€™s Round):</strong></p>
<p>A thorough discussion on an issue: If I am an owner of company which is selling some product. So, how shall I store my data in Database such that when any analyst comes and asks for any information then I could provide him most precise values. It mainly consisted which data should be stored and how it should be stored.</p>
<ol>
<li>Given two sorted arrays, create a final sorted array. Later, the problem was extended saying that, now we have â€˜mâ€™ number of sorted arrays each of size â€˜nâ€™, now efficiently create a final array. A lot of discussion was done on complexity of the approach (both time and space).</li>
</ol>
<p><strong>Round 3:</strong></p>
<ol>
<li>Given a binary tree, where cost of travelling to the left child is â€˜1â€™ and same for the right child is â€˜2â€™. Now, given the root of the tree and a value â€˜kâ€™, find the total number of nodes that are at a distance/cost of â€˜kâ€™ from the root.</li>
<li>Given an unsorted integer (positive values only) array of size â€˜nâ€™, we can form a group of two or three, the group should be such that the sum of all elements in that group is a multiple of 3. Find the maximum number of groups that can be generated in this way.</li>
<li>Given an integer array, find minimum number of jumps to reach the end of the array.<br /> <a href="http://www.geeksforgeeks.org/minimum-number-of-jumps-to-reach-end-of-a-given-array/" class="uri">http://www.geeksforgeeks.org/minimum-number-of-jumps-to-reach-end-of-a-given-array/</a></li>
</ol>
<p><strong>Round 4:</strong></p>
<ol>
<li>Given a BST, convert it into a Doubly Linked List in place. <em><span>NOTE</span></em>: We donâ€™t have to create a new data structure i.e. we have to modify the links/pointers in given BST.</li>
<li>Question was framed this way: Given street of houses (a row of houses), each house having some amount of money kept inside; now there is a thief who is going to steal this money but he has a constraint/rule that he cannot steal/rob two adjacent houses. Find the maximum money he can rob.</li>
</ol>
<p><em><span>NOTE</span></em>: I didnâ€™t face any HR round, all though in each rounds I was asked about the reason for the change.</p>
<p>In all it was a great experience, and interviewers were really cool and gave a plenty of time to think and code, sometimes suggested/hinted if I got stuck.</p>
<p>GeeksforGeeks has been extremely helpful for me in preparing.</p>
<p>If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p>
<p>   </p>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/amazon/">Amazon</a>, <a href="http://www.geeksforgeeks.org/tag/interview-experience/">Interview Experience</a></p>
<div id="source-76" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/amazon-interview-set-69-sde-1/" class="uri">http://www.geeksforgeeks.org/amazon-interview-set-69-sde-1/</a></p>
</div>
</div>
</body>
</html>

