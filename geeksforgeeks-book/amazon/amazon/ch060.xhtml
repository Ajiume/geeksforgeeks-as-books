<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>Amazon Interview | Set 52 (For Internship)</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="amazon-interview-set-52-for-internship" class="section level1 post-title">
<h1>Amazon Interview | Set 52 (For Internship)</h1>
<p>Hi All, Here is my interview experience with Amazon for internship. Hope it helps:<span id="more-123687"></span></p>
<p><strong>Round 1:</strong><br /> Online round with 20 objective questions on (Questions related to data structures, analysis of algorithms, C Language and some puzzles.) and 2 coding questions in 90 minutes</p>
<p>Write a program to reverse k alternate nodes of a linked list<br /> Ex: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6-&gt;7-&gt;8-&gt;9<br /> If k is 3 Output should be: 3-&gt;2-&gt;1-&gt;6-&gt;5-&gt;4-&gt;9-&gt;8-&gt;7</p>
<p>Given a string. Write a program to form a string with first character of all words.<br /> Ex: The bucket is full of water<br /> Output: Tbifow<br /> Check all edge and corner cases.</p>
<p><strong>Round 2: Face to face round</strong><br /> Given a binary tree. Modify it in such a way that after modification you can have a preorder traversal of it using only right pointers. During modification you can use right as well as left pointers. Write complete code and dry run it for some test cases.</p>
<p>Given 2 linked lists. Find out if they intersect or not. If yes, find intersection point .Write complete code for it.</p>
<p>I could not remember the simple way: find the length of the lists and simply move forward the shorter list by difference of the lengths and find the intersection point. Instead, I joined the end of first list at the end of the 2nd list and then went for cycle finding by Floyd Cycle finding Algorithm. Although both are O (n), but he was impressed as it was a new approach.</p>
<p><strong>Round 3: Face to face round</strong><br /> Given a sorted array of 0â€™s and 1â€™s. Find out the no. of 0â€™s in it. Write recursive, iterative versions of the code and check for all test cases.</p>
<p>Spiral level order traversal without using extra variable for detecting level (using one stack and one queue) and few other implementations as well.</p>
<p><br /> If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p>
<p>   </p>
<p>Tags: <a href="http://www.geeksforgeeks.org/tag/amazon/">Amazon</a>, <a href="http://www.geeksforgeeks.org/tag/interview-experience/">Interview Experience</a></p>
<div id="source-58" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/amazon-interview-set-52-internship/" class="uri">http://www.geeksforgeeks.org/amazon-interview-set-52-internship/</a></p>
</div>
</div>
</body>
</html>

